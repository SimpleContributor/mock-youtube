{"version":3,"sources":["components/SearchBar.js","components/VideoDetail.js","components/VideoItem.js","components/VideoList.js","apis/youtube.js","components/App.js","index.js"],"names":["StyledSearchBar","styled","div","SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","className","onSubmit","this","type","onChange","Component","StyledVideoDetail","VideoDetail","video","videoSrc","id","videoId","src","title","snippet","channelTitle","description","StyledVideoItem","VideoItem","onVideoSelect","onClick","alt","thumbnails","default","url","medium","StyledVideoList","VideoList","videos","renderedList","map","axios","create","baseURL","params","part","key","StyledApp","App","selectedVideo","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"wsCAGA,IAAMA,EAAkBC,IAAOC,IAAV,KA+ENC,E,4MA/BXC,MAAQ,CAACC,KAAM,I,EAEfC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACXA,EAAMK,iBAEN,EAAKC,MAAMC,aAAa,EAAKV,MAAMC,O,uDAInC,OACI,cAACL,EAAD,UACI,sBAAMe,UAAU,cAAcC,SAAYC,KAAKN,aAA/C,SACI,qBAAKI,UAAU,yBAAf,SACI,uBACIA,UAAU,eACVG,KAAO,OACPR,MAASO,KAAKb,MAAMC,KACpBc,SAAYF,KAAKX,0B,GAtBrBc,a,6sCC/CxB,IAAMC,EAAoBpB,IAAOC,IAAV,KA2ERoB,EAjBK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,IAAIA,EACA,OAAO,qBAAKR,UAAU,UAAf,wBAGX,IAAMS,EAAQ,wCAAoCD,EAAME,GAAGC,SAE3D,OACI,eAACL,EAAD,WACI,wBAAQN,UAAU,eAAeY,IAAKH,EAAUI,MAAM,iBACtD,qBAAKb,UAAU,QAAf,SAAwBQ,EAAMM,QAAQD,QACtC,qBAAKb,UAAU,SAAf,SAAyBQ,EAAMM,QAAQC,eACvC,qBAAKf,UAAU,cAAf,SAA8BQ,EAAMM,QAAQE,kB,m/BCtExD,IAAMC,EAAkB/B,IAAOC,IAAV,KAkFN+B,EArBG,SAAC,GAA8B,IAA5BV,EAA2B,EAA3BA,MAAOW,EAAoB,EAApBA,cACxB,OACI,eAACF,EAAD,CAAiBG,QAAS,kBAAMD,EAAcX,IAA9C,UACI,qBACIR,UAAU,YACVqB,IAAKb,EAAMM,QAAQD,MACnBD,IAAKJ,EAAMM,QAAQQ,WAAWC,QAAQC,MAE1C,qBACIxB,UAAU,YACVqB,IAAKb,EAAMM,QAAQD,MACnBD,IAAKJ,EAAMM,QAAQQ,WAAWG,OAAOD,MAEzC,sBAAKxB,UAAU,aAAf,UACI,8BAAMQ,EAAMM,QAAQD,QACpB,qBAAKb,UAAU,SAAf,SAAyBQ,EAAMM,QAAQC,sB,uUC3EvD,IAAMW,EAAkBxC,IAAOC,IAAV,KA2BNwC,EAVG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQT,EAAoB,EAApBA,cACnBU,EAAeD,EAAOE,KAAI,SAACtB,GAC7B,OAAO,cAAC,EAAD,CAAkCW,cAAeA,EAAeX,MAAOA,GAAvDA,EAAME,GAAGC,YAGpC,OACI,cAACe,EAAD,UAAkBG,K,QCvBXE,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNhC,KAAM,QACNiC,IAPI,6C,qUCMZ,IAAMC,EAAYnD,IAAOC,IAAV,KAkDAmD,E,4MAlCXjD,MAAQ,CAAEuC,OAAQ,GAAIW,cAAe,M,EAMrCxC,a,uCAAe,WAAMT,GAAN,eAAAkD,EAAA,sEACYC,EAAQC,IAAI,UAAW,CAC1CR,OAAQ,CACJS,EAAGrD,KAHA,OACLsD,EADK,OAOX,EAAKnD,SAAS,CACVmC,OAAQgB,EAASC,KAAKC,MACtBP,cAAeK,EAASC,KAAKC,MAAM,KAT5B,2C,wDAaf3B,cAAgB,SAAAX,GACZ,EAAKf,SAAS,CAAE8C,cAAe/B,K,kEAjB/BN,KAAKH,aAAa,e,+BAqBlB,OACI,eAACsC,EAAD,WACI,cAAC,EAAD,CAAWtC,aAAcG,KAAKH,eAC9B,cAAC,EAAD,CAAaS,MAAON,KAAKb,MAAMkD,gBAC/B,cAAC,EAAD,CAAWpB,cAAejB,KAAKiB,cAAeS,OAAQ1B,KAAKb,MAAMuC,gB,GA7B/DvB,aCnBlB0C,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.00abe3b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.div`\r\n    border-bottom: 2px solid black;\r\n    display: grid;\r\n    height: 120px;\r\n    justify-content: center;\r\n    margin: 24px 16px 48px 0;\r\n    width: 100%;\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n\r\n    .search-form {\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 80vw;\r\n    }\r\n\r\n    .search-input-contianer {\r\n        background-color: rgba(255, 0, 0, 0.75);\r\n        border-radius: 12px;\r\n        padding: 16px;\r\n        padding-right: 36px;\r\n        z-index: 1;\r\n    }\r\n\r\n    .search-input {\r\n        border: 2px solid black;\r\n        border-radius: 8px;\r\n        font-size: 24px;\r\n        height: 40px;\r\n        margin: 0;\r\n        padding: 8px;\r\n        width: 100%;\r\n        z-index: 10;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        .search-form{\r\n            width: 90vw;\r\n        }\r\n        \r\n    }\r\n`\r\n\r\nclass SearchBar extends Component {\r\n    state = {term: ''};\r\n\r\n    onInputChange = event => {\r\n        this.setState({ term: event.target.value });\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.onTermSubmit(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledSearchBar>\r\n                <form className=\"search-form\" onSubmit = {this.onFormSubmit}>\r\n                    <div className=\"search-input-contianer\">\r\n                        <input\r\n                            className=\"search-input\"\r\n                            type = \"text\"\r\n                            value = {this.state.term}\r\n                            onChange = {this.onInputChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </form>\r\n            </StyledSearchBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledVideoDetail = styled.div`\r\n    border-right: 2px solid black;\r\n    color: white;\r\n    display: grid;\r\n    font-size: 18px;\r\n    grid-template-rows: 500px repeat(3, auto);\r\n    justify-content: center;\r\n    margin: 24px 36px 24px auto;\r\n    padding-right: 24px;\r\n    width: 60vw;\r\n\r\n    .loading {\r\n        color: white;\r\n        font-size: 48px;\r\n        text-align: center;\r\n        width: 100%;\r\n    }\r\n\r\n    .video-player {\r\n        border: 2px solid black;\r\n        border-radius: 5px;\r\n        height: 95%;\r\n        width: 100%;\r\n    }\r\n\r\n    .title {\r\n        font-size: 24px;\r\n    }\r\n\r\n    .author {\r\n        margin: 16px 0;\r\n    }\r\n\r\n    .description {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n    @media (max-width: 1200px) {\r\n        border-bottom: 2px solid black;\r\n        border-right: none;\r\n        grid-template-rows: 400px repeat(3, auto);\r\n        grid-column-start: 1;\r\n        grid-column-end: 3;\r\n        margin: 24px auto;\r\n        margin-top: 0;\r\n        padding-right: 0px;\r\n        width: 70vw;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        grid-template-rows: 300px repeat(3, auto);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 90vw;\r\n    }\r\n`\r\n\r\nconst VideoDetail = ({ video }) => {\r\n    if(!video) {\r\n        return <div className=\"loading\">Loading...</div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <StyledVideoDetail>\r\n            <iframe className=\"video-player\" src={videoSrc} title='Video Player'></iframe>\r\n            <div className=\"title\">{video.snippet.title}</div>\r\n            <div className=\"author\">{video.snippet.channelTitle}</div>\r\n            <div className=\"description\">{video.snippet.description}</div>\r\n        </StyledVideoDetail>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledVideoItem = styled.div`\r\n    color: white;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin: 0 12px;\r\n    width: 95%;\r\n\r\n    img {\r\n        border-radius: 5px;\r\n        height: 90px;\r\n        margin-right: 12px;\r\n    }\r\n\r\n    .sm-screen {\r\n        display: none;\r\n    }\r\n\r\n    &:not(:first-child) {\r\n        margin-top: 24px;\r\n    }\r\n\r\n    .author {\r\n        margin-top: 8px;\r\n    }\r\n\r\n    @media (max-width: 1200px) {\r\n        margin: 0;\r\n        width: 100%;\r\n\r\n        img {\r\n            height: 120px;\r\n        }\r\n\r\n        .lg-screen {\r\n            display: none;\r\n        }\r\n    \r\n        .sm-screen {\r\n            display: block;\r\n        }\r\n\r\n        .video-text {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        img {\r\n            height: 90px;\r\n        }\r\n\r\n        .lg-screen {\r\n            display: block;\r\n        }\r\n    \r\n        .sm-screen {\r\n            display: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <StyledVideoItem onClick={() => onVideoSelect(video)}>\r\n            <img \r\n                className=\"lg-screen\"\r\n                alt={video.snippet.title} \r\n                src={video.snippet.thumbnails.default.url} \r\n            />\r\n            <img \r\n                className=\"sm-screen\"\r\n                alt={video.snippet.title} \r\n                src={video.snippet.thumbnails.medium.url} \r\n            />\r\n            <div className=\"video-text\">\r\n                <div>{video.snippet.title}</div>\r\n                <div className=\"author\">{video.snippet.channelTitle}</div>\r\n            </div>\r\n        </StyledVideoItem>\r\n    )\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledVideoList = styled.div`\r\n    display: grid;\r\n    margin: 24px auto;\r\n    margin-right: 36px;\r\n    \r\n\r\n    @media (max-width: 1200px) {\r\n        margin: 16px auto;\r\n        margin-top: 0;\r\n        width: 70vw;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 90vw;\r\n    }\r\n`\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n    const renderedList = videos.map((video) => {\r\n        return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />\r\n    })\r\n\r\n    return (\r\n        <StyledVideoList>{renderedList}</StyledVideoList>\r\n    )\r\n}\r\n\r\nexport default VideoList;\r\n","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyCBLHnFYsO91SejSCJnATnb07fZTm_Pf2U';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        key: KEY\r\n    }\r\n})\r\n","import React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport VideoDetail from './VideoDetail';\r\nimport VideoList from './VideoList';\r\nimport youtube from '../apis/youtube';\r\nimport styled from 'styled-components';\r\nimport './app.css';\r\n\r\nconst StyledApp = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 7fr 3fr;\r\n    grid-template-rows: 192px;\r\n\r\n\r\n    @media(max-width: 1200px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        grid-template-rows: 180px;\r\n    }\r\n`\r\n\r\nclass App extends Component {\r\n    state = { videos: [], selectedVideo: null };\r\n\r\n    componentDidMount() {\r\n        this.onTermSubmit('buildings');\r\n    }\r\n\r\n    onTermSubmit = async term => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        })\r\n\r\n        this.setState({ \r\n            videos: response.data.items, \r\n            selectedVideo: response.data.items[0] \r\n        })\r\n    }\r\n\r\n    onVideoSelect = video => {\r\n        this.setState({ selectedVideo: video })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledApp>\r\n                <SearchBar onTermSubmit={this.onTermSubmit}/>\r\n                <VideoDetail video={this.state.selectedVideo} />\r\n                <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\r\n            </StyledApp>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}